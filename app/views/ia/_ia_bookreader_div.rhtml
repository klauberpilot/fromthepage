<div class="inside-column" id="zoom_div">
	<div id="containerdiv">
		<div id="BookReader" style="left:10px; right:10px; top:10px; bottom:2em;">x</div>
	<script type="text/javascript" language="javascript">
// 
// This file is a copy of the dynamically-generated Internet Archive stuff
//
br = new BookReader();

br.titleLeaf = 3;

br.getPageWidth = function(index) {
    return this.pageW[index];
}

br.getPageHeight = function(index) {
    return this.pageH[index];
}

// Returns true if page image is available rotated
br.canRotatePage = function(index) {
    return 'jp2' == this.imageFormat; // Assume single format for now
}

// reduce defaults to 1 (no reduction)
// rotate defaults to 0 (no rotation)
br.getPageURI = function(index, reduce, rotate) {
    var _reduce;
    var _rotate;

    if ('undefined' == typeof(reduce)) {
        _reduce = 1;
    } else {
        _reduce = reduce;
    }
    if ('undefined' == typeof(rotate)) {
        _rotate = 0;
    } else {
        _rotate = rotate;
    }
    
    var file = this._getPageFile(index);
        
    // $$$ add more image stack formats here
    return 'http://'+this.server+'/BookReader/BookReaderImages.php?zip='+this.zip+'&file='+file+'&scale='+_reduce+'&rotate='+_rotate;
}

br._getPageFile = function(index) {
    var leafStr = '0000';
    var imgStr = this.leafMap[index].toString();
    var re = new RegExp("0{"+imgStr.length+"}$");
    
    var insideZipPrefix = this.subPrefix.match('[^/]+$');
    var file = insideZipPrefix + '_' + this.imageFormat + '/' + insideZipPrefix + '_' + leafStr.replace(re, imgStr) + '.' + this.imageFormat;
    
    return file;
}

br.getPageSide = function(index) {
    //assume the book starts with a cover (right-hand leaf)
    //we should really get handside from scandata.xml
    
        
    // $$$ we should get this from scandata instead of assuming the accessible
    //     leafs are contiguous
    if ('rl' != this.pageProgression) {
        // If pageProgression is not set RTL we assume it is LTR
        if (0 == (index & 0x1)) {
            // Even-numbered page
            return 'R';
        } else {
            // Odd-numbered page
            return 'L';
        }
    } else {
        // RTL
        if (0 == (index & 0x1)) {
            return 'L';
        } else {
            return 'R';
        }
    }
}

br.getPageNum = function(index) {
    var pageNum = this.pageNums[index];
    if (pageNum) {
        return pageNum;
    } else {
        return 'n' + index;
    }
}

// Single images in the Internet Archive scandata.xml metadata are (somewhat incorrectly)
// given a "leaf" number.  Some of these images from the scanning process should not
// be displayed in the BookReader (for example colour calibration cards).  Since some
// of the scanned images will not be displayed in the BookReader (those marked with
// addToAccessFormats false in the scandata.xml) leaf numbers and BookReader page
// indexes are generally not the same.  This function returns the BookReader page
// index given a scanned leaf number.
//
// This function is used, for example, to map between search results (that use the
// leaf numbers) and the displayed pages in the BookReader.
br.leafNumToIndex = function(leafNum) {
    for (var index = 0; index < this.leafMap.length; index++) {
        if (this.leafMap[index] == leafNum) {
            return index;
        }
    }
    
    return null;
}

// This function returns the left and right indices for the user-visible
// spread that contains the given index.  The return values may be
// null if there is no facing page or the index is invalid.
br.getSpreadIndices = function(pindex) {
    // $$$ we could make a separate function for the RTL case and
    //      only bind it if necessary instead of always checking
    // $$$ we currently assume there are no gaps
    
    var spreadIndices = [null, null]; 
    if ('rl' == this.pageProgression) {
        // Right to Left
        if (this.getPageSide(pindex) == 'R') {
            spreadIndices[1] = pindex;
            spreadIndices[0] = pindex + 1;
        } else {
            // Given index was LHS
            spreadIndices[0] = pindex;
            spreadIndices[1] = pindex - 1;
        }
    } else {
        // Left to right
        if (this.getPageSide(pindex) == 'L') {
            spreadIndices[0] = pindex;
            spreadIndices[1] = pindex + 1;
        } else {
            // Given index was RHS
            spreadIndices[1] = pindex;
            spreadIndices[0] = pindex - 1;
        }
    }
    
    //console.log("   index %d mapped to spread %d,%d", pindex, spreadIndices[0], spreadIndices[1]);
    
    return spreadIndices;
}

// Remove the page number assertions for all but the highest index page with
// a given assertion.  Ensures there is only a single page "{pagenum}"
// e.g. the last page asserted as page 5 retains that assertion.
br.uniquifyPageNums = function() {
    var seen = {};
    
    for (var i = br.pageNums.length - 1; i--; i >= 0) {
        var pageNum = br.pageNums[i];
        if ( !seen[pageNum] ) {
            seen[pageNum] = true;
        } else {
            br.pageNums[i] = null;
        }
    }

}

br.cleanupMetadata = function() {
    br.uniquifyPageNums();
}

// getEmbedURL
//________
// Returns a URL for an embedded version of the current book
br.getEmbedURL = function() {
    // We could generate a URL hash fragment here but for now we just leave at defaults
    var url = 'http://' + window.location.host + '/stream/'+this.bookId;
    if (this.subPrefix != this.bookId) { // Only include if needed
        url += '/' + this.subPrefix;
    }
    url += '?ui=embed';
    return url;
}

// getEmbedCode
//________
// Returns the embed code HTML fragment suitable for copy and paste
br.getEmbedCode = function() {
    return "<iframe src='" + this.getEmbedURL() + "' width='480px' height='430px'></iframe>";
}


// these can be extrapolated from the file ID_scandata.xml
// book->pageData->page->cropbox->w
// question: why is this populated from leaf 3 on, rather than leaf 0?
// answer: see comments above
//
// these can also be extrapolated from the file ID_djvu.xml
// DjVuXML->BODY->OBJECT attr:width
//br.pageW =  [
//            2247,1960,1960,1903,1903,2064,2064,2064,2064,2064,2064,2064,2064,2064,2064,2064,2064,2064,2064,2064,2064,2064,2064,2064,2064,2064,2064,2064,2064,2038,2038,2038,2038,2038,2038,2038,2038,2038,2038,2038,2038,2038,2038,2038,2038,2038,2038,2038,2038,2038,2038,2038,2038,2038,2038,2038,2038,2038,2038,2038,2038,2038,2038,2038,2038,2038,2038,2038,2038,2038,2069,2038,2038,2038,2038,2038,2038,2038,2038,2038,2038,2038,2038,2079,2079,2038,2038,2038,2038,2038,2038,2038,2038,2038,2038,2038,2043,2038,2043,2038,2038,2038,2038,2038,2038,2058,2038,2038,2038,2038,2038,2038,2038,2038,2038,2038,2038,2038,2079,2038,2038,2038,2038,2038,2038,2038,2053,2038,2038,2038,2038,2038,2038,2053,2038,2038,2038,2038,2038,2038,2038,2084,2038,2038,2038,2038,2038,2111,2096,2038,2090,2038,2121,2053,2053,2079,2079,2084,2089,2090,2116,2038,2038,2090,2136,2084,2084,2105,2105,2079,2079,2074,2074,2043,2100,2095,2095,2116,2111,2095,2095,2084,2084,2043,2043,2089,2089,2095,2105,2100,2100,2095,2085,2105,2141,2043,2063,2043,2043,2074,2100,2116,2043,2084,2069,2095,2126,2079,2053,2084,2115,2121,2101,2126,2136,2089,2084,2095,2058,2043,2043,2043,2043,2043,2043,2043,2043,2043,2043,2043,2043,2043,2043,2043,2043,2163,2110,2131,2069,2063,2074,2074,2063,2053,2043,2063,2043,2043,2043,2043,2043,2043,2043,2043,2043,2043,2043,2043,2043,2043,2043,2043,2043,2043,2043,2043,2043,2043,2043,2043,2043,2043,2043,2043,2043,2043,2043,2043,2043,2043,2043,2043,2043,2043,2043,2043,2043,2043,2043,2043,2043,2043,2043,2043,2043,2043,2043,2043,2043,2043,2043,2043,2043,2043,2043,2043,2043,2043,2043,2043,2043,2043,2043,2043,2043,2084,2043,2043,2043,2043,2043,2043,2043,2043,2043,2043,2043,2043,2043,2043,2043,2043,2043,2043,2043,2043,2043,2043,2043,2043,2043,2043,2043,2043,2043,2043,2043,2043,2043,2043,2043,2043,2043,2043,2043,2043,2043,2043,2043,2043,2043,2043,2043,2043,2043,2043,2043,2043,2043,2043,2043,2043,2043,2043,2043,2043,2043,2043,2043,2043,2043,2043,2043,2043,2043,2043,2043,2043,2043,2043,2043,2043,2043,2043,2043,2043,2043,2043,2043,2043,2043,2043,2043,2043,2043,2043,2043,2043,2043,2043,2043,2043,2043,2043,2043,2043,2043,2043,2043,2043,2043,2043,2043,2043,2043,2043,2043,2043,2043,2043,2043,2043,2043,2194            ];
br.pageW = [ <%= @page.ia_leaf.page_w %>];

// these can be extrapolated from the file ID_scandata.xml
// book->pageData->page->cropbox->h
//
// these can also be extrapolated from the file ID_djvu.xml
// DjVuXML->BODY->OBJECT attr:height , whence also page titles can be received
//br.pageH =  [
//            3444,3313,3313,3308,3308,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3313,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3308,3308,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3308,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3344,3303,3303,3303,3303,3303,3329,3360,3303,3313,3303,3360,3355,3355,3349,3359,3360,3360,3303,3318,3303,3303,3303,3318,3349,3349,3318,3318,3334,3334,3303,3303,3303,3318,3308,3344,3293,3293,3344,3344,3303,3386,3303,3334,3318,3318,3329,3375,3339,3339,3339,3339,3344,3364,3303,3303,3303,3303,3298,3329,3298,3303,3334,3308,3308,3354,3298,3308,3298,3339,3334,3360,3334,3360,3313,3370,3344,3329,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3329,3386,3308,3313,3303,3308,3303,3303,3298,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3303,3428            ];
br.pageH = [ <%= @page.ia_leaf.page_h %>];

//br.leafMap = [
//            3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436    
//            ];
br.leafMap = [<%= @page.ia_leaf.leaf_number %>];

//br.pageNums = [
//            null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,'1','2','3','4','5','6','7','8','9','10','11','12','13','14','15','16','17','18','19','20','21','22','23','24','25','26','27','28','29','30','31','32','33','34','35','36','37','38','39','40','41','42','43','44','45','46','47','48','49','50','51','52','53','54','55','56','57','58','59','60','61','62','63','64','65','66','67','68','69','70','71','72','73','74','75','76','77','78','79','80','81','82','83','84','85','86','87','88','89','90','91','92','93','94','95','96','97','98','99','100','101','102','103','104','105','106','107','108','109','110','111','112','113','114','115','116','117','118','119','120','121','122','123','124','125','126','127','128','129','130','131','132','133','134','135','136','137','138','139','140','141','142','143','144','145','146','147','148','149','150','151','152','153','154','155','156','157','158','159','160','161','162','163','164','165','166','167','168','169','170','171','172','173','174','175','176','177','178','179','180','181','182','183','184','185','186','187','188','189','190','191','192','193','194','195','196','197','198','199','200','201','202','203','204','205','206','207','208','209','210','211','212','213','214','215','216','217','218','219','220','221','222','223','224','225','226','227','228','229','230','231','232','233','234','235','236','237','238','239','240','241','242','243','244','245','246','247','248','249','250','251','252','253','254','255','256','257','258','259','260','261','262','263','264','265','266','267','268','269','270','271','272','273','274','275','276','277','278','279','280','281','282','283','284','285','286','287','288','289','290','291','292','293','294','295','296','297','298','299','300','301','302','303','304','305','306','307','308','309','310','311','312','313','314','315','316','317','318','319','320','321','322','323','324','325','326','327','328','329','330','331','332','333','334','335','336','337','338','339','340','341','342','343','344','345','346','347','348','349','350','351','352','353','354','355','356','357','358','359','360','361','362','363','364','365',null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null    
//            ];
br.pageNums = [ '<%=@page.ia_leaf.page_number%>'];
            
      
br.numLeafs = br.pageW.length;

// derived by text input or browser
br.bookId   = '<%=@work.ia_work.book_id%>';

// bookPath and server may be derived from hitting the stream url -- see
//  lynx -source "http://www.archive.org/stream/1941fieldnosla00klau"
// output js include file

// filename aone may be derived from ID_files.xml
br.zip      = '<%=@work.ia_work.ia_path%>/<%=@work.ia_work.book_id%>_<%=@work.ia_work.image_format%>.<%=@work.ia_work.archive_format%>';//'/10/items/1941fieldnotesla00klau/1941fieldnotesla00klau_jp2.zip';
br.subPrefix = '<%=@work.ia_work.book_id%>'; //'1941fieldnotesla00klau';
br.server   = '<%=@work.ia_work.server %>';  //'ia360700.us.archive.org';
br.bookTitle= '<%=@work.ia_work.title%>';//'1941 Field Notes Laurence M. Klauber';
br.bookPath = '<%=@work.ia_work.ia_path%>';
br.bookUrl  = 'http://www.archive.org/details/<%=@work.ia_work.book_id%>';
br.imageFormat = '<%=@work.ia_work.image_format%>';
br.archiveFormat = '<%=@work.ia_work.archive_format%>';

br.pageProgression = 'lr';
// Check for config object
// $$$ change this to use the newer params object
if (typeof(brConfig) != 'undefined') {
    if (typeof(brConfig["ui"]) != 'undefined') {
        br.ui = brConfig["ui"];
    }

    if (brConfig['mode'] == 1) {
        br.mode = 1;
        if (typeof(brConfig['reduce'] != 'undefined')) {
            br.reduce = brConfig['reduce'];
        }
    } else if (brConfig['mode'] == 2) {
        br.mode = 2;
      
    }
} // brConfig

br.cleanupMetadata();
br.init();

	</script>
		</div>
    </div>
</div>
